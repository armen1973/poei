<?php

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\user\UserInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Form\FormStateInterface;
/**
 * @param $route_name
 * @return string
 */
function hello_help($route_name) {
    switch ($route_name) {

        // Main module help for the block module.
        case 'help.page.hello':
            return '<p>' . t('Blocks are boxes of content rendered into an area, or region, of a web page. The default theme Bartik, for example, implements the regions "Sidebar first", "Sidebar second", "Featured", "Content", "Header", "Footer", etc., and a block may appear in any one of these areas. The <a href=":blocks">blocks administration page</a> provides a drag-and-drop interface for assigning a block to a region, and for controlling the order of blocks within regions.', [
                    ':blocks' => \Drupal::url('block.admin_display'),
                ]) . '</p>';

        // Help for another path in the block module.
        case 'block.admin_display':
            return '<p>' . t('This page provides a drag-and-drop interface for assigning a block to a region, and for controlling the order of blocks within regions. Since not all themes implement the same regions, or display regions in the same way, blocks are positioned on a per-theme basis. Remember that your changes will not be saved until you click the <em>Save blocks</em> button at the bottom of the page.') . '</p>';
    }

}

/**
 * @param UserInterface $account
 */

function hello_user_login(UserInterface $account)
{
    // ksm($account);

    \Drupal::messenger()->addMessage(t('Welcome dear %name!',
        ['%name' => $account->getAccountName()]));

    $user_account = $account->getRoles();
    $user_statistics_roles = \Drupal::config('hello.settings')->get('user_statistics_role');

    $testdiff = array_intersect($user_account, $user_statistics_roles);

    if (count($testdiff) > '0') {
        \Drupal::database()->insert('hello_user_statistics')
            ->fields([
                'time' => REQUEST_TIME,
                'uid' => $account->id(),
                'action' => '1',
            ])
            ->execute();
    }
}


/**
 * @param AccountInterface $account
 * @throws Exception
 */
function hello_user_logout(AccountInterface $account)
{

    $user_acount = $account->getRoles();
    $user_statistics_roles = \Drupal::config('hello.settings')->get('user_statistics_role');

    $testdiff = array_intersect($user_acount, $user_statistics_roles);

    if (count($testdiff) > '0') {

        \Drupal::database()->insert('hello_user_statistics')
            ->fields([
                'time' => REQUEST_TIME,
                'uid' => $account->id(),
                'action' => '0',
            ])
            ->execute();
    }
}
/**
 * @param UserInterface $account
 */

function hello_user_delete(UserInterface $account) {

    \Drupal::database()->delete('hello_user_statistics')
        ->condition('uid', $account
            ->id())
        ->execute();

}

/**
 *
 */
function hello_cron() {


    $expires = \Drupal::config('hello.settings')->get('purge_days_number');
    if($expires != '0') {
        $nombre_suppression = \Drupal::database()->delete('hello_user_statistics')
            ->condition('time', REQUEST_TIME - $expires * (24 * 3600), '<')
            ->execute();
    }
        \Drupal::messenger()->addMessage(t('@nombre_suppression  records have been deleted.',['@nombre_suppression ' => $nombre_suppression ]));

}

/**
 * @param $existing
 * @param $type
 * @param $theme
 * @param $path
 * @return array
 */
function hello_theme($existing, $type, $theme, $path) {
    return array(
        'hello' =>array(
            'template' => 'hello-connexions',
            'variables' => array('count' => NULL, 'user' => NULL),
        ),
    );
}

/**
 * @param array $form
 * @param FormStateInterface $form_state
 * @param $form_id
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 */
function hello_form_user_admin_settings_alter(array &$form, FormStateInterface $form_state, $form_id) {

    $user_statistics_roles = \Drupal::config('hello.settings')->get('user_statistics_role');
    $result = \Drupal::entityTypeManager()->getStorage('user_role')->loadMultiple();

    unset($result['authenticated']);
    unset($result['anonymous']);


    $role = [];
    foreach($result as $cle) {
        $role[$cle->id()] = $cle->label();
    }


    $form['user_statistics'] = array(
        '#type' => 'details',
        '#title' => t('ROLES FOR WHICH TO COLLECT ACTIVITY STATISTICS'),
        '#open' => TRUE,
        '#weight' => '-100',
    );

    $form['user_statistics']['user_role'] = array(
        '#type' => 'checkboxes',
        '#options' => $role,
        '#default_value' => $user_statistics_roles,
    );

    $form['#submit'][] = 'hello_admin_user_settings_submit';
}

/**
 * @param $form
 * @param FormStateInterface $form_state
 */
function hello_admin_user_settings_submit($form, FormStateInterface $form_state) {
    $config = \Drupal::configFactory()->getEditable('hello.settings');
    $config->set('user_statistics_role', $form_state->getValue('user_role'))->save();
}

